plugins {
    id "com.android.library"
    id "com.github.dcendents.android-maven"
    id "com.jfrog.bintray"
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 3
        versionName "0.10.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    /*
    //Enable use R resources from local unit tests
    sourceSets {
        test.java.srcDirs += "build/generated/source/r/debug"
    }
    */
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.json:json:20141113'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.android.support:appcompat-v7:28.0.0'
}

//BINTRAY - JCENTER
group = 'com.neatorobotics.sdk.android'
version = '0.10.0'

def siteUrl = 'https://github.com/NeatoRobotics/neato-sdk-android'
def gitUrl = 'https://github.com/NeatoRobotics/neato-sdk-android.git'

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (Exception e) {
    println '[Neato SDK]local.properties file not found!'
}


bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = "neato-sdk-android"
        desc = 'Neato SDK for Android'
        websiteUrl = siteUrl
        issueTrackerUrl = 'https://github.com/NeatoRobotics/neato-sdk-android'
        vcsUrl = gitUrl
        licenses = ['MIT']
        labels = ['neato', 'android', 'sdk', 'java']
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'Neato SDK for Android'
                url siteUrl
                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id 'marcouberti'
                        name 'Marco Uberti'
                        email 'marco.uberti@neatorobotics.com'
                    }
                }
                scm {
                    connection 'https://github.com/NeatoRobotics/neato-sdk-android'
                    developerConnection 'https://github.com/NeatoRobotics/neato-sdk-android'
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    //archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
